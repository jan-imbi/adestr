# Generated by roxygen2: do not edit by hand

S3method("[",EstimatorScoreResultList)
S3method(format,EstimatorScoreResultList)
export(Bias)
export(BiasReduced)
export(Coverage)
export(Expectation)
export(FirstStageSampleMean)
export(IntervalEstimator)
export(LikelihoodRatioOrderingCI)
export(LikelihoodRatioOrderingPValue)
export(LinearShiftRepeatedPValue)
export(MLEOrderingCI)
export(MLEOrderingPValue)
export(MSE)
export(MedianUnbiasedLikelihoodRatioOrdering)
export(MedianUnbiasedMLEOrdering)
export(MedianUnbiasedNeymanPearsonOrdering)
export(MedianUnbiasedScoreTestOrdering)
export(MedianUnbiasedStagewiseCombinationFunctionOrdering)
export(MidpointLikelihoodRatioOrderingCI)
export(MidpointMLEOrderingCI)
export(MidpointNeymanPearsonOrderingCI)
export(MidpointScoreTestOrderingCI)
export(MidpointStagewiseCombinationFunctionOrderingCI)
export(MinimizePeakVariance)
export(NaiveCI)
export(NeymanPearsonOrderingCI)
export(NeymanPearsonOrderingPValue)
export(NormalPrior)
export(OverestimationProbability)
export(PValue)
export(PointEstimator)
export(PseudoRaoBlackwell)
export(RaoBlackwell)
export(RepeatedCI)
export(SampleMean)
export(ScoreTestOrderingCI)
export(ScoreTestOrderingPValue)
export(SoftCoverage)
export(StagewiseCombinationFunctionOrderingCI)
export(StagewiseCombinationFunctionOrderingPValue)
export(TestAgreement)
export(UniformPrior)
export(Variance)
export(VirtualIntervalEstimator)
export(WeightedSampleMean)
export(Width)
export(analyze)
export(evaluate_estimator)
export(evaluate_scenarios_parallel)
export(get_example_design)
export(get_example_estimators)
export(get_stagewise_estimators)
exportClasses(EstimatorScore)
exportClasses(IntervalEstimator)
exportClasses(PValue)
exportClasses(PointEstimator)
import(adoptr)
import(ggplot2)
import(ggpubr)
import(latex2exp)
import(methods)
importFrom(cubature,hcubature)
importFrom(forcats,as_factor)
importFrom(future.apply,future_apply)
importFrom(grDevices,xy.coords)
importFrom(latex2exp,TeX)
importFrom(progressr,progressor)
importFrom(scales,percent)
importFrom(stats,dchisq)
importFrom(stats,dnorm)
importFrom(stats,dt)
importFrom(stats,dunif)
importFrom(stats,integrate)
importFrom(stats,optimize)
importFrom(stats,pchisq)
importFrom(stats,pnorm)
importFrom(stats,pt)
importFrom(stats,qchisq)
importFrom(stats,qnorm)
importFrom(stats,qt)
importFrom(stats,uniroot)
importFrom(stats,var)
importFrom(utils,capture.output)
importFrom(utils,tail)
useDynLib(adestr, .registration = TRUE)
